Used this webpage for guidance:
http://arvindsraj.wordpress.com/2012/10/05/adding-hello-world-system-call-to-linux/
http://stackoverflow.com/questions/12469836/how-to-write-system-calls-on-debian-ubuntu
https://wiki.ubuntu.com/Kernel/BuildYourOwnKernel

Add your syscall to the syscall table - add your syscall to the file:

ubuntu-quantal/arch/x86/syscalls/syscall_32.tbl
"350 i386    helloworld      sys_helloworld"

ubuntu-quantal/arch/m32r/kernel/syscall_table.S 
"    .long sys_helloworld"

ubuntu-quantal/arch/sh/kernel/syscalls_32.S
"    .long sys_helloworld"

ubuntu-quantal/arch/sh/include/asm/unistd_32.h

add: "#define __NR_helloworld     367"

add one more to the number: "#define NR_syscalls 368"

ubuntu-quantal/include/linux/syscalls.h
"asmlinkage long sys_helloworld(void);"


in the root directory of the operating system add a folder called "test"
then add a file called "sys_helloworld.c" with the following code in it:

"#include <linux/kernel.h>

asmlinkage long sys_helloworld(void) {
    printk("Hello world! This freaking rocks!\n");
    return 0;
}"

add a file called "Makefile" to the test directory and add this line to it:
"obj-y := sys_helloworld.o"

in ubuntu-quantal/Makfile add "test/" to the end of the line that says:
"core-y		+= kernel/ mm/ fs/ ipc/ security/ crypto/ block/"

build your kernel using these two commands at the root directory of your operating system (this takes me 2 hours):

fakeroot debian/rules clean
fakeroot debian/rules binary-headers binary-generic

then go up one directory and use these two commands:

sudo dpkg -i linux*2.6.38-7.37*.deb
sudo reboot

once your system has rebooted, create a c program which calls your newly built system call:

#include <linux/types.h>
#include <linux/unistd.h>
#include <sys/types.h>
#include <string.h>

int main(int argc, char *argv[]) {
  int result = syscall(350);

  if (result == -1) {
    char *errorMessage = "Oh no! My kernel fails";
  }
  return result;
}


to check to see if your syscall worked, check your kernel log:

use this command "tail -f /var/log/kern.log" to see the kernel log and wait to see your hello-world output at the end of the list!
